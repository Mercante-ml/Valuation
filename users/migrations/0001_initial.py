# Generated by Django 5.2.7 on 2025-10-24 13:33

import users.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('cnpj', models.CharField(help_text='CNPJ (apenas números)', max_length=14, unique=True, validators=[users.models.validate_cnpj])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('razao_social', models.CharField(max_length=255)),
                ('usage_count', models.PositiveIntegerField(default=0, help_text='Contador de quantas vezes o usuário usou o simulador.')),
                ('is_active', models.BooleanField(default=True, help_text="Define se o usuário pode logar. Desmarque para 'banir' o usuário.")),
                ('is_staff', models.BooleanField(default=False, help_text='Define se o usuário pode acessar o site de Admin.')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
